The infrastructure of an image compressing app typically consists of several components that work together to support its functionality. Here's a description of the key infrastructure components:

1. User Interface (UI):
   - The user interface component provides the visual interface through which users interact with the app. It includes screens, forms, buttons, and other UI elements for image upload, compression options selection, and result display.

2. Client-Side:
   - The client-side component runs on the user's device (web browser or mobile app) and handles the user interface interactions.
   - It handles image upload, sends requests to the server-side, and displays the compressed image results.

3. Server-Side:
   - The server-side component processes the image compression requests and performs the necessary operations to compress the images.
   - It receives image files from the client-side, applies compression algorithms or techniques, and returns the compressed image files.
   - The server-side can be implemented using a backend programming language and framework (e.g., Python with Flask or Node.js with Express.js).

4. Image Compression Algorithms:
   - Image compression algorithms are at the core of the app's functionality. They are responsible for reducing the file size of the images while maintaining an acceptable level of visual quality.
   - These algorithms can include techniques like lossy compression (e.g., JPEG) or lossless compression (e.g., PNG).
   - Depending on the chosen algorithms, appropriate libraries or tools need to be integrated into the server-side component.

5. Storage:
   - The app may require storage for temporarily storing uploaded images, compressed images, or any other necessary data.
   - Storage can be implemented using a file system or cloud-based storage services like Amazon S3 or Google Cloud Storage.

6. APIs:
   - The app may integrate with third-party APIs or services for additional functionality. For example, integrating with an image processing or computer vision API to enhance the app's capabilities.
   - APIs can be used for image analysis, metadata extraction, or applying advanced image processing operations.

7. Network:
   - The app relies on network communication between the client-side and server-side components.
   - It uses protocols such as HTTP or HTTPS to transmit image data and receive compressed images.

8. Infrastructure Services:
   - Depending on the deployment setup, the app may require infrastructure services such as cloud hosting, load balancing, auto-scaling, or containerization.
   - These services ensure the app's availability, scalability, and performance under varying workloads.

It's important to note that the specific infrastructure setup can vary based on the project requirements, scale, and deployment environment. The components described above provide a general overview of the infrastructure needed for an image compressing app, and the implementation details can be customized as per the project's needs.