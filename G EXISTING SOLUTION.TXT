There are several existing solutions available for image compression that you can explore. Here are some popular ones:

1. TinyPNG: TinyPNG is an online service and API that offers lossy compression for PNG and JPEG images. It uses smart algorithms to reduce file sizes while maintaining good image quality.

2. Kraken.io: Kraken.io provides an image optimization and compression service with both lossy and lossless compression options. It supports various image formats and offers features like resizing, metadata preservation, and API integration.

3. Cloudinary: Cloudinary is a cloud-based media management platform that includes image compression and optimization features. It provides automatic optimization, resizing, and responsive image delivery based on different devices and screen sizes.

4. ImageKit.io: ImageKit.io is an image optimization and delivery service that offers on-the-fly image resizing, compression, and format conversion. It provides a simple API for integration and supports various optimization techniques.

5. JPEGmini: JPEGmini specializes in JPEG image compression. It reduces file sizes significantly without noticeable quality loss by removing unnecessary metadata and applying advanced compression algorithms.

6. imgix: imgix is an image optimization and processing service that offers real-time resizing, compression, and format conversion. It provides a powerful API for image manipulation and optimization on the fly.

These existing solutions can be utilized by integrating their APIs or using their online services to achieve image compression. They offer convenient features, optimization techniques, and compatibility with different platforms and formats. However, it's important to review their terms of service, pricing, and specific features to determine which solution best fits your project's requirements.

Here are the similarities and differences between the image compressing app you're building and the existing solutions mentioned:

Similarities:
1. Image Compression Functionality: Both your app and the existing solutions aim to compress images to reduce file sizes while maintaining acceptable visual quality.
2. File Format Support: Both solutions typically support common image formats like PNG and JPEG.
3. User Interface: Both your app and the existing solutions provide a user interface for users to upload images, select compression options, and view the compressed results.
4. Performance Improvement: Both solutions aim to improve the performance of websites, applications, or image-heavy platforms by reducing image file sizes and optimizing loading times.

Differences:
1. Ownership and Customization: Building your own app allows you to have complete ownership and customization over the features, user experience, and integration possibilities. Existing solutions may have limitations in terms of customization and may require adherence to their provided APIs and services.
2. Platform Dependency: The existing solutions mentioned are often web-based services or APIs that can be integrated into various platforms. Your app can be developed specifically for a chosen platform, such as a web app or a mobile app, offering a more tailored user experience for that platform.
3. Cost and Pricing: Existing solutions may have pricing plans or usage-based costs associated with their services. Building your own app gives you the flexibility to determine the cost structure or make it completely free for users.
4. Additional Features: Depending on the specific existing solution, there may be additional features beyond basic image compression, such as image resizing, optimization for different devices, and advanced image manipulation. Your app can focus solely on image compression or include additional features based on your project's scope and requirements.

Considering these similarities and differences, building your own app allows you to have control over the features, customization, and platform compatibility. On the other hand, using existing solutions can save development time and leverage established technologies and optimization techniques. The choice ultimately depends on your project's goals, resources, and the level of customization and control you require.